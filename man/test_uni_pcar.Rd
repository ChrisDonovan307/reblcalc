% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_test_uni_pcar.R
\name{test_uni_pcar}
\alias{test_uni_pcar}
\title{Test Unidimensionality Using Principal Component Analysis}
\usage{
test_uni_pcar(
  model,
  n_vars = length(model$se.beta),
  rotate = "Promax",
  n_factors = 4
)
}
\arguments{
\item{model}{An eRm model object (RM, RSM, or PCM)}

\item{n_vars}{Numeric. Number of variables to use in the analysis. Default is length(model$se.beta).}

\item{rotate}{Character string specifying rotation method for PCA. Default is 'Promax'.
Other options include 'varimax', 'quartimax', etc.}

\item{n_factors}{Numeric. Number of factors to extract. Default is 4.}
}
\value{
A PCA object from the psych package containing:
\item{values}{Eigenvalues}
\item{loadings}{Factor loadings}
\item{scores}{Factor scores}
\item{rotation}{Rotation method used}
}
\description{
This function performs a principal component analysis on standardized residuals
from a Rasch model to test the assumption of unidimensionality.
}
\details{
This function tests unidimensionality by:
\itemize{
\item Extracting standardized residuals from the Rasch model
\item Performing PCA on these residuals
\item Creating a scree plot with eigenvalues
\item Adding a reference line at eigenvalue = 2
}

The first eigenvalue should be small (< 2) if the unidimensionality assumption holds.
Large eigenvalues suggest the presence of additional dimensions in the data.
}
\examples{
\dontrun{
# Test unidimensionality
pca_result <- test_uni_pcar(rasch_model)

# Custom analysis with different parameters
pca_result <- test_uni_pcar(rasch_model, n_factors = 6, rotate = "varimax")
}
}
