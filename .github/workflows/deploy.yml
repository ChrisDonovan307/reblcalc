name: Deploy to Silk with rsync
on:
  workflow_run:
    workflows: ["Rhino Test"]
    types:
      - completed
        # push:
        #   branches:
        #     # - main
        #     - dev
        # workflow_dispatch:

jobs:
  #   build:
  #     runs-on: ubuntu-latest
  #     env:
  #       BRANCH: ${{ github.event.workflow_run.head_branch }}
  #     steps:
  #       - name: Checkout repo
  #         uses: actions/checkout@v4

        #       - name: Setup system dependencies
        #         run: |
        #           packages=(
        #             cmake
        #             # gdal-bin
        #             libcurl4-openssl-dev
        #             libfontconfig1-dev
        #             libfreetype6-dev
        #             # libgdal-dev
        #             # libgeos-dev
        #             libgit2-dev
        #             libglpk-dev
        #             libjpeg-dev
        #             libpng-dev
        #             libudunits2-dev
        #             libx11-dev
        #             # pandoc
        #           )
        #           sudo apt-get update
        #           sudo apt-get install --yes "${packages[@]}"

        #       - name: Setup R
        #         uses: r-lib/actions/setup-r@v2
        #         with:
        #           r-version: renv
        # 
        #       - name: Setup R dependencies
        #         uses: r-lib/actions/setup-renv@v2

  deploy:
    #     needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Determine deploy target
        id: branch
        run: |
          echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          if [ "${GITHUB_REF_NAME}" = "dev" ]; then
            echo "REMOTE_PATH=${{ secrets.REMOTE_PATH_DEV }}" >> $GITHUB_ENV
            echo "echo Deploying to DEV server..."
          elif [ "${GITHUB_REF_NAME}" = "main" ]; then
            echo "REMOTE_PATH=${{ secrets.REMOTE_PATH_PROD }}" >> $GITHUB_ENV
            echo "echo Deploying to PROD server..."
          else
            echo "Not a deploy branch, exiting."
            exit 0
          fi

      - name: Deploy app and renv.lock via rsync
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avzr --delete
          legacy_allow_rsa_hostkeys: "true"
          path: ./app ./renv.lock
          remote_path: ${{ env.REMOTE_PATH }}
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Restore renv on remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} \
            ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} \
            "cd ${{ env.REMOTE_PATH }} && Rscript -e 'renv::restore()'"

